---
apiVersion: v1
kind: Namespace
metadata:
  name: sumologic
---
apiVersion: v1
kind: Secret
metadata:
  name: sumologic
  namespace: sumologic
  labels:
    k8s-app: fluentd-sumologic
type: Opaque
stringData:
  endpoint-metrics: XXXX
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRoleBinding
metadata:
  name: fluentd
subjects:
- kind: ServiceAccount
  name: fluentd
  namespace: sumologic
roleRef:
  kind: ClusterRole
  name: fluentd
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRole
metadata:
  name: fluentd
  labels:
    k8s-app: fluentd-sumologic
rules:
- apiGroups: [""]
  resources:
  - nodes
  - namespaces
  - events
  - pods
  - replicasets
  - statefulsets
  - deployments
  verbs: ["get", "list", "watch"]
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: fluentd
  namespace: sumologic
  labels:
    k8s-app: fluentd-sumologic
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: fluentd-config
  namespace: sumologic
data:
  fluent.conf: |-
    @include metrics.conf
    @include events.conf
    @include logs.conf
  metrics.conf: |-
    <source>
      @type http
      port 9888
      <parse>
        @type protobuf
      </parse>
    </source>
    <match prometheus.metrics.**>
      @type datapoint
      tag prometheus.datapoint
    </match>
    <filter prometheus.datapoint>
      @type carbon_v2
    </filter>
    # <filter prometheus.datapoint>
    #   @type stdout
    # </filter>
    <match prometheus.datapoint>
      @type sumologic
      endpoint "#{ENV['SUMO_ENDPOINT_METRICS']}"
      data_type metrics
      metric_data_format carbon2
    </match>
  events.conf: |-
    <source>
      @type dummy
      tag "dummy.events"
      dummy {"hello":"world"}
    </source>
    <match "dummy.events">
      @type null
    </match>
  logs.conf: |-
    <source>
      @type dummy
      tag "dummy.logs"
      dummy {"hello":"world"}
    </source>
    <match "dummy.logs">
      @type null
    </match>
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: fluentd
  namespace: sumologic
  labels:
    k8s-app: fluentd-sumologic
spec:
  selector:
    matchLabels:
      k8s-app: fluentd-sumologic
  replicas: 1
  template:
    metadata:
      labels:
        k8s-app: fluentd-sumologic
    spec:
      serviceAccountName: fluentd
      volumes:
      - name: pos-files
        hostPath:
          path: /var/run/fluentd-pos
          type: ""
      - name: config-volume
        configMap:
          name: fluentd-config
      containers:
      - name: fluentd
        image: sumologic/kubernetes-fluentd
        imagePullPolicy: Always
        resources:
          limits:
            memory: 2Gi
            cpu: "200m"
          requests:
            memory: 2Gi
            cpu: "200m"
        ports:
        - name: prom-write
          containerPort: 9888
          protocol: TCP
        livenessProbe:
          exec:
            command:
            - "/bin/sh"
            - "-c"
            - "[[ $( pgrep ruby | wc -l)  == 2 ]]"
          initialDelaySeconds: 300
          periodSeconds: 20
        readinessProbe:
          exec:
            command:
            - "/bin/sh"
            - "-c"
            - "[[ $( pgrep ruby | wc -l)  == 2 ]]"
          initialDelaySeconds: 45
          periodSeconds: 5
        volumeMounts:
        - name: config-volume
          mountPath: /fluentd/etc/
        - name: pos-files
          mountPath: /mnt/pos/
        env:
        - name: SUMO_ENDPOINT_METRICS
          valueFrom:
            secretKeyRef:
              name: sumologic
              key: endpoint-metrics
---
apiVersion: v1
kind: Service
metadata:
  name: fluentd
  namespace: sumologic
  labels:
    k8s-app: fluentd-sumologic
spec:
  selector:
    k8s-app: fluentd-sumologic
  ports:
  - name: prom-write
    port: 9888
    targetPort: 9888
    protocol: TCP
---
